name: CI
on: [push, pull_request]

jobs:
  clang-ci:
    runs-on: ${{ matrix.os }}
  
    strategy:
      matrix: 
        os: [ubuntu-latest, windows-latest]
        
    steps:
      - name: checkout
        uses: actions/checkout@v4
        
      - name: setup tools
        uses: actions/setup-python@v5

      - name: meson setup with sanitizers enabled (linux only)
        if: matrix.os == 'ubuntu-latest'
        uses: BSFishy/meson-build@v1.0.3
        with:
          action: setup
          options: "-Db_sanitize=address,undefined"

      - name: meson setup with no sanitizers (OS other than linux)
        if: matrix.os != 'ubuntu-latest'
        uses: BSFishy/meson-build@v1.0.3
        with:
          action: setup
      
      - name: meson build
        uses: BSFishy/meson-build@v1.0.3
        with:
          action: build
        
      - name: run meson tests with sanitizers enabled (linux only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          export ASAN_OPTIONS=abort_on_error=1:detect_leaks=0:log_path=asan
          export UBSAN_OPTIONS=print_stacktrace=1:halt_on_error=1
          meson test -C build"
        continue-on-error: true

      - name: run meson tests with sanitizers disabled (windows only)
        if: matrix.os == 'windows-latest'
        uses: BSFishy/meson-build@v1.0.3
        with:
          action: test

      - name: upload meson test logs
        uses: actions/upload-artifact@v4
        # if: failure()
        with:
          name: meson_test_log${{ matrix.os }}.txt
          path: build/meson-logs/testlog.txt

      - name: fail job if any meson tests failed
        if: steps.meson-tests.outputs.status != ''
        run: exit 1
